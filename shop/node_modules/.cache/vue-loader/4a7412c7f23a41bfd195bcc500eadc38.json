{"remainingRequest":"D:\\jessica\\workspcae\\GitHub\\mooc2\\shop\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\jessica\\workspcae\\GitHub\\mooc2\\shop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\jessica\\workspcae\\GitHub\\mooc2\\shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jessica\\workspcae\\GitHub\\mooc2\\shop\\src\\components\\Layout.vue?vue&type=template&id=005bfc5a&","dependencies":[{"path":"D:\\jessica\\workspcae\\GitHub\\mooc2\\shop\\src\\components\\Layout.vue","mtime":1624369107510},{"path":"D:\\jessica\\workspcae\\GitHub\\mooc2\\shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624095269746},{"path":"D:\\jessica\\workspcae\\GitHub\\mooc2\\shop\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1624095349406},{"path":"D:\\jessica\\workspcae\\GitHub\\mooc2\\shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1624095269746},{"path":"D:\\jessica\\workspcae\\GitHub\\mooc2\\shop\\node_modules\\vue-loader\\lib\\index.js","mtime":1624095349404}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibHllYXItbGF5b3V0LXdlYiIsIGF0dHJzOiB7IGlkOiAiYXBwIiB9IH0sIFsKICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibHllYXItbGF5b3V0LWNvbnRhaW5lciIgfSwgWwogICAgICBfYygiYXNpZGUiLCB7IHN0YXRpY0NsYXNzOiAibHllYXItbGF5b3V0LXNpZGViYXIiIH0sIFsKICAgICAgICBfdm0uX20oMCksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJseWVhci1sYXlvdXQtc2lkZWJhci1zY3JvbGwiIH0sIFsKICAgICAgICAgIF9jKCJuYXYiLCB7IHN0YXRpY0NsYXNzOiAic2lkZWJhci1tYWluIiB9LCBbCiAgICAgICAgICAgIF9jKCJ1bCIsIHsgc3RhdGljQ2xhc3M6ICJuYXYgbmF2LWRyYXdlciIgfSwgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImxpIiwKICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJuYXYtaXRlbSIgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoInJvdXRlci1saW5rIiwgeyBhdHRyczogeyB0bzogIi9yZXBvcnQiIH0gfSwgWwogICAgICAgICAgICAgICAgICAgIF9jKCJpIiwgeyBzdGF0aWNDbGFzczogIm1kaSBtZGktaG9tZSIgfSksCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIg6aaW6aG1ICIpCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAibGkiLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogIm5hdi1pdGVtIG5hdi1pdGVtLWhhcy1zdWJuYXYgYWN0aXZlIG9wZW4iIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF92bS5fbSgxKSwKICAgICAgICAgICAgICAgICAgX2MoInVsIiwgeyBzdGF0aWNDbGFzczogIm5hdiBuYXYtc3VibmF2IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAibGkiLAogICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICBfYygicm91dGVyLWxpbmsiLCB7IGF0dHJzOiB7IHRvOiAiL2Jhbm5lcl9saXN0IiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIui9ruaSreWbvueuoeeQhiIpCiAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAibGkiLAogICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAicm91dGVyLWxpbmsiLAogICAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgdG86ICIvZXhjZWxsZW50X2NvdXJzZXMiIH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCLng63pl6jnrqHnkIYiKV0KICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJsaSIsCiAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAibmF2LWl0ZW0gbmF2LWl0ZW0taGFzLXN1Ym5hdiBhY3RpdmUgb3BlbiIgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX3ZtLl9tKDIpLAogICAgICAgICAgICAgICAgICBfYygidWwiLCB7IHN0YXRpY0NsYXNzOiAibmF2IG5hdi1zdWJuYXYiIH0sIFsKICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICJsaSIsCiAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyB0bzogIi9leGNlbGxlbnRfY291cnNlcyIgfSB9LAogICAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIuivvueoi+euoeeQhiIpXQogICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAibGkiLAogICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICBfYygicm91dGVyLWxpbmsiLCB7IGF0dHJzOiB7IHRvOiAiL3N1YmplY3RfbGlzdCIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCLor77nqIvlvZLnsbvnrqHnkIYiKQogICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJsaSIsCiAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAibmF2LWl0ZW0gbmF2LWl0ZW0taGFzLXN1Ym5hdiBhY3RpdmUgb3BlbiIgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX3ZtLl9tKDMpLAogICAgICAgICAgICAgICAgICBfYygidWwiLCB7IHN0YXRpY0NsYXNzOiAibmF2IG5hdi1zdWJuYXYiIH0sIFsKICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICJsaSIsCiAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJyb3V0ZXItbGluayIsIHsgYXR0cnM6IHsgdG86ICIvdGVhY2hlcl9saXN0IiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIuaVmeW4iOeuoeeQhiIpCiAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImxpIiwKICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJuYXYtaXRlbSBuYXYtaXRlbS1oYXMtc3VibmF2IGFjdGl2ZSBvcGVuIiB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfdm0uX20oNCksCiAgICAgICAgICAgICAgICAgIF9jKCJ1bCIsIHsgc3RhdGljQ2xhc3M6ICJuYXYgbmF2LXN1Ym5hdiIgfSwgWwogICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgImxpIiwKICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgX2MoInJvdXRlci1saW5rIiwgeyBhdHRyczogeyB0bzogIi9tZW1iZXJfbGlzdCIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCLkvJrlkZjnrqHnkIYiKQogICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdKQogICAgICAgICAgXSksCiAgICAgICAgICBfdm0uX20oNSkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX2MoImhlYWRlciIsIHsgc3RhdGljQ2xhc3M6ICJseWVhci1sYXlvdXQtaGVhZGVyIiB9LCBbCiAgICAgICAgX2MoIm5hdiIsIHsgc3RhdGljQ2xhc3M6ICJuYXZiYXIgbmF2YmFyLWRlZmF1bHQiIH0sIFsKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidG9wYmFyIiB9LCBbCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidG9wYmFyLWxlZnQiIH0sIFsKICAgICAgICAgICAgICBfdm0uX20oNiksCiAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAibmF2YmFyLXBhZ2UtdGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigiICIgKyBfdm0uX3MoX3ZtLnRpdGxlKSArICIgIikKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoInVsIiwgeyBzdGF0aWNDbGFzczogInRvcGJhci1yaWdodCIgfSwgWwogICAgICAgICAgICAgIF9jKCJsaSIsIHsgc3RhdGljQ2xhc3M6ICJkcm9wZG93biBkcm9wZG93bi1wcm9maWxlIiB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX20oNyksCiAgICAgICAgICAgICAgICBfYygidWwiLCB7IHN0YXRpY0NsYXNzOiAiZHJvcGRvd24tbWVudSBkcm9wZG93bi1tZW51LXJpZ2h0IiB9LCBbCiAgICAgICAgICAgICAgICAgIF92bS5fbSg4KSwKICAgICAgICAgICAgICAgICAgX3ZtLl9tKDkpLAogICAgICAgICAgICAgICAgICBfdm0uX20oMTApLAogICAgICAgICAgICAgICAgICBfYygibGkiLCB7IHN0YXRpY0NsYXNzOiAiZGl2aWRlciIgfSksCiAgICAgICAgICAgICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmdvdG8oIi9sb2dpbiIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICBfYygiaSIsIHsgc3RhdGljQ2xhc3M6ICJtZGkgbWRpLWxvZ291dC12YXJpYW50IiB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIg6YCA5Ye655m75b2VIikKICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIF0pCiAgICAgICAgICBdKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfYygKICAgICAgICAibWFpbiIsCiAgICAgICAgeyBzdGF0aWNDbGFzczogImx5ZWFyLWxheW91dC1jb250ZW50IiB9LAogICAgICAgIFtfYygicm91dGVyLXZpZXciLCB7IGF0dHJzOiB7IG5hbWU6ICJjb250ZW50IiB9IH0pXSwKICAgICAgICAxCiAgICAgICkKICAgIF0pCiAgXSkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gWwogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJzaWRlYmFyLWhlYWRlciIsIGF0dHJzOiB7IGlkOiAibG9nbyIgfSB9LCBbCiAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiaW5kZXguaHRtbCIgfSB9LCBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIHNyYzogInN0YXRpYy9pbWFnZXMvbG9nby1zaWRlYmFyLnBuZyIsCiAgICAgICAgICAgIHRpdGxlOiAiTGlnaHRZZWFyIiwKICAgICAgICAgICAgYWx0OiAiTGlnaHRZZWFyIgogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgIF0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygKICAgICAgImEiLAogICAgICB7IGF0dHJzOiB7IGhyZWY6ICJqYXZhc2NyaXB0OnZvaWQoMCkiLCAiZGF0YS10b2dnbGUiOiAiZHJvcGRvd24iIH0gfSwKICAgICAgW19jKCJpIiwgeyBzdGF0aWNDbGFzczogIm1kaSBtZGktZmlsZS1vdXRsaW5lIiB9KSwgX3ZtLl92KCIg6aaW6aG1566h55CGIildCiAgICApCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKAogICAgICAiYSIsCiAgICAgIHsgYXR0cnM6IHsgaHJlZjogImphdmFzY3JpcHQ6dm9pZCgwKSIsICJkYXRhLXRvZ2dsZSI6ICJkcm9wZG93biIgfSB9LAogICAgICBbX2MoImkiLCB7IHN0YXRpY0NsYXNzOiAibWRpIG1kaS1maWxlLW91dGxpbmUiIH0pLCBfdm0uX3YoIiDor77nqIvnrqHnkIYiKV0KICAgICkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoCiAgICAgICJhIiwKICAgICAgeyBhdHRyczogeyBocmVmOiAiamF2YXNjcmlwdDp2b2lkKDApIiwgImRhdGEtdG9nZ2xlIjogImRyb3Bkb3duIiB9IH0sCiAgICAgIFtfYygiaSIsIHsgc3RhdGljQ2xhc3M6ICJtZGkgbWRpLWZpbGUtb3V0bGluZSIgfSksIF92bS5fdigiIOaVmeW4iOeuoeeQhiIpXQogICAgKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygKICAgICAgImEiLAogICAgICB7IGF0dHJzOiB7IGhyZWY6ICJqYXZhc2NyaXB0OnZvaWQoMCkiLCAiZGF0YS10b2dnbGUiOiAiZHJvcGRvd24iIH0gfSwKICAgICAgW19jKCJpIiwgeyBzdGF0aWNDbGFzczogIm1kaSBtZGktZmlsZS1vdXRsaW5lIiB9KSwgX3ZtLl92KCIg5Lya5ZGY566h55CGIildCiAgICApCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAic2lkZWJhci1mb290ZXIiIH0sIFsKICAgICAgX2MoInAiLCB7IHN0YXRpY0NsYXNzOiAiY29weXJpZ2h0IiB9LCBbCiAgICAgICAgX3ZtLl92KCJDb3B5cmlnaHQgwqkgMjAyMS4gIiksCiAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IHRhcmdldDogIl9ibGFuayIsIGhyZWY6ICIjIiB9IH0sIFsKICAgICAgICAgIF92bS5fdigibWluaWNsYXNzIikKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiBBbGwgcmlnaHRzIHJlc2VydmVkLiIpCiAgICAgIF0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImx5ZWFyLWFzaWRlLXRvZ2dsZXIiIH0sIFsKICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAibHllYXItdG9nZ2xlci1iYXIiIH0pLAogICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJseWVhci10b2dnbGVyLWJhciIgfSksCiAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogImx5ZWFyLXRvZ2dsZXItYmFyIiB9KQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoCiAgICAgICJhIiwKICAgICAgeyBhdHRyczogeyBocmVmOiAiamF2YXNjcmlwdDp2b2lkKDApIiwgImRhdGEtdG9nZ2xlIjogImRyb3Bkb3duIiB9IH0sCiAgICAgIFsKICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJpbWctYXZhdGFyIGltZy1hdmF0YXItNDggbS1yLTEwIiwKICAgICAgICAgIGF0dHJzOiB7IHNyYzogInN0YXRpYy9pbWFnZXMvdXNlcnMvYXZhdGFyLmpwZyIsIGFsdDogImFkbWluIiB9CiAgICAgICAgfSksCiAgICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KCJhZG1pbiIpLCBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJjYXJldCIgfSldKQogICAgICBdCiAgICApCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJsaSIsIFsKICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICJseWVhcl9wYWdlc19wcm9maWxlLmh0bWwiIH0gfSwgWwogICAgICAgIF9jKCJpIiwgeyBzdGF0aWNDbGFzczogIm1kaSBtZGktYWNjb3VudCIgfSksCiAgICAgICAgX3ZtLl92KCIg5Liq5Lq65L+h5oGvIikKICAgICAgXSkKICAgIF0pCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJsaSIsIFsKICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICJseWVhcl9wYWdlc19lZGl0X3B3ZC5odG1sIiB9IH0sIFsKICAgICAgICBfYygiaSIsIHsgc3RhdGljQ2xhc3M6ICJtZGkgbWRpLWxvY2stb3V0bGluZSIgfSksCiAgICAgICAgX3ZtLl92KCIg5L+u5pS55a+G56CBIikKICAgICAgXSkKICAgIF0pCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJsaSIsIFsKICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICJqYXZhc2NyaXB0OnZvaWQoMCkiIH0gfSwgWwogICAgICAgIF9jKCJpIiwgeyBzdGF0aWNDbGFzczogIm1kaSBtZGktZGVsZXRlIiB9KSwKICAgICAgICBfdm0uX3YoIiDmuIXnqbrnvJPlrZgiKQogICAgICBdKQogICAgXSkKICB9Cl0KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}