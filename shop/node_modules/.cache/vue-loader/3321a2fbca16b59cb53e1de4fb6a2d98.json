{"remainingRequest":"E:\\study\\junior\\mooc\\shop\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\study\\junior\\mooc\\shop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\study\\junior\\mooc\\shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\study\\junior\\mooc\\shop\\src\\components\\Layout.vue?vue&type=template&id=005bfc5a&","dependencies":[{"path":"E:\\study\\junior\\mooc\\shop\\src\\components\\Layout.vue","mtime":1624016944118},{"path":"E:\\study\\junior\\mooc\\shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\study\\junior\\mooc\\shop\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\study\\junior\\mooc\\shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\study\\junior\\mooc\\shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}